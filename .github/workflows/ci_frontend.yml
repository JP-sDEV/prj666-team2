name: CI Frontend

on:
  pull_request:
    branches:
      - main
  push:
    paths:
      - 'src/app/pages/**' # Trigger only when client files are changed
      - '!src/app/pages/api/**' # Exclude API changes
  workflow_dispatch:

jobs:
  lint:
    name: Lint Client Files
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Clear npm cache
        run: npm cache clean --force

      - name: Install dependencies
        run: npm ci

      - name: Lint client
        run: npm run lint:client

  test:
    name: Frontend Tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Clear npm cache
        run: npm cache clean --force

      - name: Install dependencies
        run: npm ci

      - name: Run integration tests
        run: npm run test:integration

  build:
    name: Build Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Clear npm cache
        run: npm cache clean --force

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential

      - name: Install dependencies
        run: |
          npm ci
          npm install sharp --platform=linux --arch=x64

      - name: Setup Environment
        run: |
          cp .env.local .env
          echo "Using mock environment variables for CI/CD"

      - name: Build frontend
        run: npm run build
